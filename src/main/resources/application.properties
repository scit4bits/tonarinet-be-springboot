spring.application.name=tonarinetserver

server.port=8999

#server.servlet.context-path=/web6

#Logback 사용. 전체를 대상으로 로깅 레벨 지정
#error>warn>info>debug>trace
logging.level.root=info

# 특정 패키지를 대상으로 로깅 레벨 지정
logging.level.org.scit4bits.tonarinetserver=debug

### MySql 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${MYSQL_URL}
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}

### Hibernate SQL 로그
# SQL 문 출력
logging.level.org.hibernate.SQL=debug
# 파라미터 값 출력
logging.level.org.hibernate.type.descriptor.sql=trace

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false


### UPLOAD 설정
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.location=${UPLOAD_PATH}

springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/api-docs

line.api.client_id=${LINE_API_CLIENT_ID}
line.api.client_secret=${LINE_API_CLIENT_SECRET}
line.api.redirect_uri=${LINE_API_REDIRECT_URI}

google.api.client_id=${GOOGLE_API_CLIENT_ID}
google.api.client_secret=${GOOGLE_API_CLIENT_SECRET}
google.api.redirect_uri=${GOOGLE_API_REDIRECT_URI}

kakao.client_id=${KAKAO_CLIENT_ID}
kakao.redirect_uri=${KAKAO_REDIRECT_URI}
kakao.client_secret=${KAKAO_CLIENT_SECRET}

jwt.secret_key=${JWT_SECRET_KEY}

spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.sender=tonarinet@thxx.xyz
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

### Jackson & JPA 설정 - Lazy Loading 방지
# JPA 설정 - Open Session In View 비활성화 (가장 중요)
spring.jpa.open-in-view=false
# Hibernate lazy loading을 트랜잭션 없이 실행하지 않도록 설정
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false
# JPA 성능 최적화
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

### OpenAI Configuration
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-5-mini
spring.ai.openai.chat.options.temperature=1

### Google Translation API Configuration
google.translation.api.key=${GOOGLE_TRANS_API_KEY}